fastcgi_cache_path /dev/shm/microcache levels=1:2 keys_zone=MYAPP:5M max_size=256M inactive=2h;
fastcgi_cache_key "$request_method$request_uri$request_body";
add_header X-Cache $upstream_cache_status;

map $request_method $no_cache {
    default 0;
    HEAD 1;
    GET 1;
    POST 1;
}

server {
    root   /var/www/html/public;
    access_log  /dev/stdout;
    error_log  /dev/stderr;
    index index.php index.html index.html;

    # Adding Access-Control-Allow-Origin to all request
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-CustomHeader,X-Requested-With,X-Mx-ReqToken' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;

    #Cache everything by default
    set $no_cache 0;
    keepalive_timeout  60;
    #set $no_cache 1;
    #Don't cache POST requests
    if ($request_method = POST) {
        set $no_cache 0;
    }
    #Don't cache if the URL contains a query string
    if ($query_string != "") {
        set $no_cache 1;
    }
    #Don't cache the following URLs
    if ($request_uri ~* "/(administrator/|login.php)") {
        set $no_cache 1;
    }
    #Don't cache if there is a cookie called PHPSESSID
    if ($http_cookie = "PHPSESSID") {
        set $no_cache 1;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # This matters if you use drush
    location = /backup {
        deny all;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location @rewrite {
        # Some modules enforce no slash (/) at the end of the URL
        # Else this rewrite block wouldn't be needed (GlobalRedirect)
        rewrite ^/(.*)$ /index.php$1?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO                $fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_pass unix:/run/php7.1-fpm.sock;
        #fastcgi_read_timeout 40;
        fastcgi_cache MYAPP;
        fastcgi_cache_valid 200 301 2m;
        fastcgi_cache_bypass $no_cache;
        fastcgi_no_cache $no_cache;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        #proxy_set_header            HTTP_CLIENT_IP $remote_addr;
        # Set cache key to include identifying components

        fastcgi_cache_valid 302     1m;
        fastcgi_cache_valid 404     1s;
        fastcgi_cache_min_uses 1;
        fastcgi_cache_use_stale error timeout invalid_header updating http_500;
        fastcgi_ignore_headers Cache-Control Expires;
        fastcgi_pass_header Set-Cookie;
        fastcgi_pass_header Cookie;
        fastcgi_connect_timeout 3600;
        fastcgi_send_timeout 3600;
        fastcgi_read_timeout 3600;
        fastcgi_cache_key "$request_method$request_uri$request_body";
        ## Add a cache miss/hit status header.
        add_header X-Micro-Cache $upstream_cache_status;

        ## To avoid any interaction with the cache control headers we expire
        ## everything on this location immediately.
        #expires epoch;

        ## Cache locking mechanism for protecting the backend of too many
        ## simultaneous requests.
        fastcgi_cache_lock on;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires max;
        log_not_found off;
    }

    location ~ \.css {
        add_header  Content-Type    text/css;
        expires max;
    }

    location ~ \.js {
        add_header  Content-Type    application/x-javascript;
        expires max;
    }

    location ~* \.(eot|ttf|woff|svg) {
        add_header Access-Control-Allow-Origin *;
        try_files $uri @rewrite;
    }
}